services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    ports:
      - "${PGADMIN_PORT}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    depends_on:
      - postgres

  neo4j:
    image: neo4j:latest
    container_name: neo4j
    restart: always
    ports:
      - "${NEO4J_HTTP_PORT}:${NEO4J_HTTP_PORT}" # Neo4j Browser
      - "${NEO4J_BOLT_PORT}:${NEO4J_BOLT_PORT}" # Bolt Protocol
    environment:
      NEO4J_AUTH: "${NEO4J_USER}/${NEO4J_PASSWORD}"
    volumes:
      - neo4jdata:/data

  milvus:
    image: milvusdb/milvus:v2.2.9
    container_name: milvus
    command: ["milvus", "run", "standalone"]
    restart: always
    ports:
      - "${MILVUS_GRPC_PORT}:${MILVUS_GRPC_PORT}"
      - "${MILVUS_HTTP_PORT}:${MILVUS_HTTP_PORT}"
    environment:
      - TZ=${TZ}
      - ETCD_ENDPOINTS=etcd:${ETCD_PORT}
      - ETCD_ROOT_USER=root
      - ETCD_ROOT_PASSWORD=${ETCD_ROOT_PASSWORD} 
      - MINIO_ADDRESS=minio:${MINIO_PORT}
    depends_on:
      - etcd
      - minio
    volumes:
      - milvus_data:/var/lib/milvus

  etcd:
    image: bitnami/etcd:latest
    container_name: etcd
    restart: always
    environment:
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
      - ALLOW_NONE_AUTHENTICATION=yes
    volumes:
      - etcd_data:/etcd

  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --address ":${MINIO_PORT}" --console-address ":${MINIO_CONSOLE_PORT}"
    restart: always
    ports:
      - "${MINIO_PORT}:${MINIO_PORT}"
      - "${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data

  minio-files:
    image: minio/minio:latest
    container_name: minio-files
    command: server /data --address ":${MINIO_FILES_PORT}" --console-address ":${MINIO_FILES_CONSOLE_PORT}"
    restart: always
    ports:
      - "${MINIO_FILES_PORT}:${MINIO_FILES_PORT}"
      - "${MINIO_FILES_CONSOLE_PORT}:${MINIO_FILES_CONSOLE_PORT}"
    environment:
      - MINIO_ROOT_USER=${MINIO_FILES_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_FILES_ROOT_PASSWORD}
    volumes:
      - minio_files_data:/data

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: azurite
    restart: always
    ports:
      - "${AZURITE_BLOB_PORT}:10000"
      - "${AZURITE_QUEUE_PORT}:10001"
      - "${AZURITE_TABLE_PORT}:10002"
    volumes:
      - azurite_data:/data
    profiles: ["azure"]

  azurite-files:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: azurite-files
    restart: always
    ports:
      - "${AZURITE_FILES_BLOB_PORT}:10000"
      - "${AZURITE_FILES_QUEUE_PORT}:10001"
      - "${AZURITE_FILES_TABLE_PORT}:10002"
    volumes:
      - azurite_files_data:/data
    profiles: ["azure"]

  attu:
    image: zilliz/attu:latest
    container_name: attu
    restart: always
    ports:
      - "${ATTU_PORT}:3000"
    environment:
      - MILVUS_URL=${MILVUS_HOST}
      - MILVUS_PORT=${MILVUS_PORT}
      - HOST=${ATTU_HOST}
    depends_on:
      - milvus

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - "--config.file=${PROMETHEUS_CONFIG}"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-clock-panel,grafana-simple-json-datasource
    depends_on:
      - prometheus

  ingestion:
    build:
      context: .
      dockerfile: backend/ingestion/Dockerfile
    container_name: ingestion
    restart: always
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      MILVUS_HOST: milvus
      MILVUS_GRPC_PORT: ${MILVUS_GRPC_PORT}
    depends_on:
      - postgres
      - milvus

  graph:
    build:
      context: .
      dockerfile: backend/graph/Dockerfile
    container_name: graph
    restart: always
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      NEO4J_HOST: neo4j
      NEO4J_URI: ${NEO4J_URI}
      NEO4J_USER: ${NEO4J_USER}
      NEO4J_PASSWORD: ${NEO4J_PASSWORD}
      NEO4J_HTTP_PORT: ${NEO4J_HTTP_PORT}
      NEO4J_BOLT_PORT: ${NEO4J_BOLT_PORT}
    depends_on:
      - postgres
      - neo4j

volumes:
  pgdata:
  neo4jdata:
  milvus_data:
  etcd_data:
  minio_data:
  minio_files_data:
  azurite_data:
  azurite_files_data:
  grafana_data:
